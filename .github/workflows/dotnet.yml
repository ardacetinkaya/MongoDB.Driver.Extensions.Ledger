name: .NET

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**/*.csproj'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/**/*.csproj'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore src/MongoDB.Driver.Extensions.Ledger.csproj

    - name: Build
      run: dotnet build src/MongoDB.Driver.Extensions.Ledger.csproj --configuration Release --no-restore

    - name: Pack
      run: dotnet pack src/MongoDB.Driver.Extensions.Ledger.csproj -c Release -o out --no-build

    outputs:
      package_path: ${{ steps.pack.outputs.package_path }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: >
      github.ref == 'refs/heads/main' && 
      (github.event_name == 'push' || 
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true))
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Publish NuGet package
      env:
        NUGET_API_KEY: ${{ secrets.NugetSecret }}
      run: dotnet nuget push "./out/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY

    - name: Extract version from .csproj
      id: extract_version
      run: |
        VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/MongoDB.Driver.Extensions.Ledger.csproj)
        echo "##[set-output name=VERSION;]$VERSION"

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.VERSION }}
        release_name: Release ${{ steps.extract_version.outputs.VERSION }}
        body: "Release of version ${{ steps.extract_version.outputs.VERSION }}."
        draft: false
        prerelease: false
